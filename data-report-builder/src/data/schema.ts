import { SchemaCatalog, SchemaObject, Relationship } from '@/types';

const schema: SchemaCatalog = {
  objects: [
    {
      name: 'customer',
      label: 'Customer',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'email', label: 'Email', type: 'string' },
        { name: 'name', label: 'Name', type: 'string' },
        { name: 'phone', label: 'Phone', type: 'string' },
        { name: 'description', label: 'Description', type: 'string' },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'balance', label: 'Balance', type: 'number' },
        { name: 'delinquent', label: 'Delinquent', type: 'boolean' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'default_source_id', label: 'Default Source ID', type: 'id' },
        { name: 'invoice_settings_default_payment_method_id', label: 'Default Payment Method', type: 'id' },
        { name: 'address_city', label: 'City', type: 'string' },
        { name: 'address_country', label: 'Country', type: 'string' },
        { name: 'address_line1', label: 'Address Line 1', type: 'string' },
        { name: 'address_line2', label: 'Address Line 2', type: 'string' },
        { name: 'address_postal_code', label: 'Postal Code', type: 'string' },
        { name: 'address_state', label: 'State', type: 'string' },
        { name: 'shipping_address_city', label: 'Shipping City', type: 'string' },
        { name: 'shipping_address_country', label: 'Shipping Country', type: 'string' },
        { name: 'shipping_address_line1', label: 'Shipping Line 1', type: 'string' },
        { name: 'shipping_address_line2', label: 'Shipping Line 2', type: 'string' },
        { name: 'shipping_address_postal_code', label: 'Shipping Postal Code', type: 'string' },
        { name: 'shipping_address_state', label: 'Shipping State', type: 'string' },
        { name: 'shipping_name', label: 'Shipping Name', type: 'string' },
        { name: 'shipping_phone', label: 'Shipping Phone', type: 'string' },
        { name: 'tax_exempt', label: 'Tax Exempt', type: 'string', enum: ['none', 'exempt', 'reverse'] },
        { name: 'preferred_locales', label: 'Preferred Locales', type: 'string' },
      ],
    },
    {
      name: 'subscription',
      label: 'Subscription',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'status', label: 'Status', type: 'string', enum: ['incomplete', 'incomplete_expired', 'trialing', 'active', 'past_due', 'canceled', 'unpaid', 'paused'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'current_period_start', label: 'Current Period Start', type: 'date' },
        { name: 'current_period_end', label: 'Current Period End', type: 'date' },
        { name: 'cancel_at', label: 'Cancel At', type: 'date' },
        { name: 'canceled_at', label: 'Canceled At', type: 'date' },
        { name: 'cancel_at_period_end', label: 'Cancel at Period End', type: 'boolean' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'default_payment_method_id', label: 'Default Payment Method', type: 'id' },
        { name: 'default_source_id', label: 'Default Source ID', type: 'id' },
        { name: 'billing', label: 'Billing', type: 'string', enum: ['charge_automatically', 'send_invoice'] },
        { name: 'billing_cycle_anchor', label: 'Billing Cycle Anchor', type: 'date' },
        { name: 'collection_method', label: 'Collection Method', type: 'string', enum: ['charge_automatically', 'send_invoice'] },
        { name: 'days_until_due', label: 'Days Until Due', type: 'number' },
        { name: 'ended_at', label: 'Ended At', type: 'date' },
        { name: 'start_date', label: 'Start Date', type: 'date' },
        { name: 'trial_start', label: 'Trial Start', type: 'date' },
        { name: 'trial_end', label: 'Trial End', type: 'date' },
        { name: 'application_fee_percent', label: 'Application Fee Percent', type: 'number' },
        { name: 'automatic_tax_enabled', label: 'Automatic Tax Enabled', type: 'boolean' },
        { name: 'description', label: 'Description', type: 'string' },
        { name: 'discount_coupon_id', label: 'Discount Coupon ID', type: 'id' },
        { name: 'discount_customer_id', label: 'Discount Customer ID', type: 'id' },
        { name: 'discount_end', label: 'Discount End', type: 'date' },
        { name: 'discount_start', label: 'Discount Start', type: 'date' },
        { name: 'discount_subscription', label: 'Discount Subscription', type: 'string' },
      ],
    },
    {
      name: 'invoice',
      label: 'Invoice',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'subscription_id', label: 'Subscription ID', type: 'id' },
        { name: 'amount_due', label: 'Amount Due', type: 'number' },
        { name: 'amount_paid', label: 'Amount Paid', type: 'number' },
        { name: 'amount_remaining', label: 'Amount Remaining', type: 'number' },
        { name: 'subtotal', label: 'Subtotal', type: 'number' },
        { name: 'total', label: 'Total', type: 'number' },
        { name: 'tax', label: 'Tax', type: 'number' },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'due_date', label: 'Due Date', type: 'date' },
        { name: 'period_start', label: 'Period Start', type: 'date' },
        { name: 'period_end', label: 'Period End', type: 'date' },
        { name: 'status', label: 'Status', type: 'string', enum: ['draft', 'open', 'paid', 'uncollectible', 'void'] },
        { name: 'paid', label: 'Paid', type: 'boolean' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'description', label: 'Description', type: 'string' },
        { name: 'number', label: 'Invoice Number', type: 'string' },
        { name: 'collection_method', label: 'Collection Method', type: 'string', enum: ['charge_automatically', 'send_invoice'] },
        { name: 'default_payment_method_id', label: 'Default Payment Method', type: 'id' },
        { name: 'attempt_count', label: 'Attempt Count', type: 'number' },
        { name: 'attempted', label: 'Attempted', type: 'boolean' },
        { name: 'auto_advance', label: 'Auto Advance', type: 'boolean' },
      ],
    },
    {
      name: 'payment',
      label: 'Payment',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'invoice_id', label: 'Invoice ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'status', label: 'Status', type: 'string', enum: ['succeeded', 'pending', 'failed', 'canceled'] },
        { name: 'captured', label: 'Captured', type: 'boolean' },
      ],
    },
    {
      name: 'charge',
      label: 'Charge',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'payment_intent_id', label: 'Payment Intent ID', type: 'id' },
        { name: 'invoice_id', label: 'Invoice ID', type: 'id' },
        { name: 'payment_method_id', label: 'Payment Method ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'amount_captured', label: 'Amount Captured', type: 'number' },
        { name: 'amount_refunded', label: 'Amount Refunded', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'status', label: 'Status', type: 'string', enum: ['succeeded', 'pending', 'failed'] },
        { name: 'paid', label: 'Paid', type: 'boolean' },
        { name: 'refunded', label: 'Refunded', type: 'boolean' },
        { name: 'captured', label: 'Captured', type: 'boolean' },
        { name: 'failure_code', label: 'Failure Code', type: 'string' },
        { name: 'failure_message', label: 'Failure Message', type: 'string' },
        { name: 'description', label: 'Description', type: 'string' },
      ],
    },
    {
      name: 'refund',
      label: 'Refund',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'charge_id', label: 'Charge ID', type: 'id' },
        { name: 'payment_intent_id', label: 'Payment Intent ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'status', label: 'Status', type: 'string', enum: ['succeeded', 'pending', 'failed', 'canceled'] },
        { name: 'reason', label: 'Reason', type: 'string', enum: ['duplicate', 'fraudulent', 'requested_by_customer', 'expired_uncaptured_charge'] },
        { name: 'description', label: 'Description', type: 'string' },
        { name: 'failure_reason', label: 'Failure Reason', type: 'string' },
      ],
    },
    {
      name: 'price',
      label: 'Price',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'product_id', label: 'Product ID', type: 'id' },
        { name: 'unit_amount', label: 'Unit Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp'] },
        { name: 'recurring_interval', label: 'Recurring Interval', type: 'string', enum: ['day', 'week', 'month', 'year'] },
        { name: 'active', label: 'Active', type: 'boolean' },
        { name: 'created', label: 'Created', type: 'date' },
      ],
    },
    {
      name: 'product',
      label: 'Product',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'name', label: 'Name', type: 'string' },
        { name: 'description', label: 'Description', type: 'string' },
        { name: 'active', label: 'Active', type: 'boolean' },
        { name: 'created', label: 'Created', type: 'date' },
      ],
    },
    {
      name: 'subscription_item',
      label: 'Subscription Item',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'subscription_id', label: 'Subscription ID', type: 'id' },
        { name: 'price_id', label: 'Price ID', type: 'id' },
        { name: 'quantity', label: 'Quantity', type: 'number' },
        { name: 'created', label: 'Created', type: 'date' },
      ],
    },
    {
      name: 'payment_method',
      label: 'Payment Method',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'type', label: 'Type', type: 'string', enum: ['card', 'bank_account', 'sepa_debit', 'us_bank_account'] },
        { name: 'card_brand', label: 'Card Brand', type: 'string', enum: ['visa', 'mastercard', 'amex', 'discover'] },
        { name: 'card_last4', label: 'Card Last 4', type: 'string' },
        { name: 'card_exp_month', label: 'Card Exp Month', type: 'number' },
        { name: 'card_exp_year', label: 'Card Exp Year', type: 'number' },
        { name: 'created', label: 'Created', type: 'date' },
      ],
    },
    {
      name: 'invoice_item',
      label: 'Invoice Item',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'invoice_id', label: 'Invoice ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'subscription_id', label: 'Subscription ID', type: 'id' },
        { name: 'price_id', label: 'Price ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'quantity', label: 'Quantity', type: 'number' },
        { name: 'description', label: 'Description', type: 'string' },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'period_start', label: 'Period Start', type: 'date' },
        { name: 'period_end', label: 'Period End', type: 'date' },
      ],
    },
    {
      name: 'coupon',
      label: 'Coupon',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'name', label: 'Name', type: 'string' },
        { name: 'amount_off', label: 'Amount Off', type: 'number' },
        { name: 'percent_off', label: 'Percent Off', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'duration', label: 'Duration', type: 'string', enum: ['forever', 'once', 'repeating'] },
        { name: 'duration_in_months', label: 'Duration in Months', type: 'number' },
        { name: 'max_redemptions', label: 'Max Redemptions', type: 'number' },
        { name: 'redeem_by', label: 'Redeem By', type: 'date' },
        { name: 'times_redeemed', label: 'Times Redeemed', type: 'number' },
        { name: 'valid', label: 'Valid', type: 'boolean' },
        { name: 'created', label: 'Created', type: 'date' },
      ],
    },
    {
      name: 'discount',
      label: 'Discount',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'coupon_id', label: 'Coupon ID', type: 'id' },
        { name: 'subscription_id', label: 'Subscription ID', type: 'id' },
        { name: 'invoice_id', label: 'Invoice ID', type: 'id' },
        { name: 'start', label: 'Start', type: 'date' },
        { name: 'end', label: 'End', type: 'date' },
      ],
    },
    {
      name: 'quote',
      label: 'Quote',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'amount_subtotal', label: 'Amount Subtotal', type: 'number' },
        { name: 'amount_total', label: 'Amount Total', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'status', label: 'Status', type: 'string', enum: ['draft', 'open', 'accepted', 'canceled'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'expires_at', label: 'Expires At', type: 'date' },
        { name: 'description', label: 'Description', type: 'string' },
      ],
    },
    {
      name: 'credit_note',
      label: 'Credit Note',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'invoice_id', label: 'Invoice ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'subtotal', label: 'Subtotal', type: 'number' },
        { name: 'total', label: 'Total', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'status', label: 'Status', type: 'string', enum: ['issued', 'void'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'reason', label: 'Reason', type: 'string', enum: ['duplicate', 'fraudulent', 'order_change', 'product_unsatisfactory'] },
        { name: 'memo', label: 'Memo', type: 'string' },
      ],
    },
    {
      name: 'subscription_schedule',
      label: 'Subscription Schedule',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'subscription_id', label: 'Subscription ID', type: 'id' },
        { name: 'status', label: 'Status', type: 'string', enum: ['not_started', 'active', 'completed', 'released', 'canceled'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'current_phase_start', label: 'Current Phase Start', type: 'date' },
        { name: 'current_phase_end', label: 'Current Phase End', type: 'date' },
        { name: 'end_behavior', label: 'End Behavior', type: 'string', enum: ['release', 'cancel'] },
      ],
    },
    {
      name: 'plan',
      label: 'Plan',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'product_id', label: 'Product ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'interval', label: 'Interval', type: 'string', enum: ['day', 'week', 'month', 'year'] },
        { name: 'interval_count', label: 'Interval Count', type: 'number' },
        { name: 'nickname', label: 'Nickname', type: 'string' },
        { name: 'active', label: 'Active', type: 'boolean' },
        { name: 'created', label: 'Created', type: 'date' },
      ],
    },
    {
      name: 'payment_intent',
      label: 'Payment Intent',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'invoice_id', label: 'Invoice ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'status', label: 'Status', type: 'string', enum: ['requires_payment_method', 'requires_confirmation', 'requires_action', 'processing', 'requires_capture', 'canceled', 'succeeded'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'payment_method_id', label: 'Payment Method ID', type: 'id' },
        { name: 'description', label: 'Description', type: 'string' },
        { name: 'capture_method', label: 'Capture Method', type: 'string', enum: ['automatic', 'manual'] },
        { name: 'confirmation_method', label: 'Confirmation Method', type: 'string', enum: ['automatic', 'manual'] },
      ],
    },
    {
      name: 'balance_transaction',
      label: 'Balance Transaction',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'type', label: 'Type', type: 'string', enum: ['charge', 'refund', 'adjustment', 'application_fee', 'transfer', 'payout'] },
        { name: 'source_id', label: 'Source ID', type: 'id' },
        { name: 'status', label: 'Status', type: 'string', enum: ['available', 'pending'] },
        { name: 'fee', label: 'Fee', type: 'number' },
        { name: 'net', label: 'Net', type: 'number' },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'available_on', label: 'Available On', type: 'date' },
      ],
    },
    {
      name: 'dispute',
      label: 'Dispute',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'charge_id', label: 'Charge ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'status', label: 'Status', type: 'string', enum: ['warning_needs_response', 'warning_under_review', 'warning_closed', 'needs_response', 'under_review', 'charge_refunded', 'won', 'lost'] },
        { name: 'reason', label: 'Reason', type: 'string', enum: ['bank_cannot_process', 'check_returned', 'credit_not_processed', 'customer_initiated', 'debit_not_authorized', 'duplicate', 'fraudulent', 'general', 'incorrect_account_details', 'insufficient_funds', 'product_not_received', 'product_unacceptable', 'subscription_canceled', 'unrecognized'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'evidence_due_by', label: 'Evidence Due By', type: 'date' },
      ],
    },
    {
      name: 'customer_balance_transaction',
      label: 'Customer Balance Transaction',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'amount', label: 'Amount', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'type', label: 'Type', type: 'string', enum: ['adjustment', 'applied_to_invoice', 'credit_note', 'initial', 'invoice_too_large', 'invoice_too_small', 'migration', 'unapplied_from_invoice', 'unspent_receiver_credit'] },
        { name: 'description', label: 'Description', type: 'string' },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'ending_balance', label: 'Ending Balance', type: 'number' },
        { name: 'invoice_id', label: 'Invoice ID', type: 'id' },
      ],
    },
    {
      name: 'customer_tax_id',
      label: 'Customer Tax ID',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'type', label: 'Type', type: 'string', enum: ['eu_vat', 'br_cnpj', 'br_cpf', 'gb_vat', 'no_vat', 'au_abn', 'in_gst', 'jp_cn', 'jp_rn', 'kr_brn', 'li_uid', 'mx_rfc', 'my_frp', 'my_itn', 'my_sst', 'sg_gst', 'sg_uen', 'th_vat', 'tw_vat', 'us_ein', 'za_vat'] },
        { name: 'value', label: 'Value', type: 'string' },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'verification_status', label: 'Verification Status', type: 'string', enum: ['pending', 'verified', 'unverified', 'unavailable'] },
      ],
    },
    {
      name: 'checkout_session',
      label: 'Checkout Session',
      fields: [
        { name: 'id', label: 'ID', type: 'id' },
        { name: 'customer_id', label: 'Customer ID', type: 'id' },
        { name: 'payment_intent_id', label: 'Payment Intent ID', type: 'id' },
        { name: 'subscription_id', label: 'Subscription ID', type: 'id' },
        { name: 'amount_subtotal', label: 'Amount Subtotal', type: 'number' },
        { name: 'amount_total', label: 'Amount Total', type: 'number' },
        { name: 'currency', label: 'Currency', type: 'string', enum: ['usd', 'eur', 'gbp', 'cad', 'aud'] },
        { name: 'status', label: 'Status', type: 'string', enum: ['open', 'complete', 'expired'] },
        { name: 'mode', label: 'Mode', type: 'string', enum: ['payment', 'setup', 'subscription'] },
        { name: 'created', label: 'Created', type: 'date' },
        { name: 'expires_at', label: 'Expires At', type: 'date' },
      ],
    },
  ],
  relationships: [
    {
      from: 'customer',
      to: 'subscription',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple subscriptions',
    },
    {
      from: 'customer',
      to: 'invoice',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple invoices',
    },
    {
      from: 'customer',
      to: 'payment',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple payments',
    },
    {
      from: 'customer',
      to: 'charge',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple charges',
    },
    {
      from: 'customer',
      to: 'payment_method',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple payment methods',
    },
    {
      from: 'subscription',
      to: 'invoice',
      type: 'one-to-many',
      via: 'subscription_id',
      description: 'A subscription can have multiple invoices',
    },
    {
      from: 'subscription',
      to: 'subscription_item',
      type: 'one-to-many',
      via: 'subscription_id',
      description: 'A subscription can have multiple items',
    },
    {
      from: 'invoice',
      to: 'payment',
      type: 'one-to-many',
      via: 'invoice_id',
      description: 'An invoice can have multiple payments',
    },
    {
      from: 'payment',
      to: 'charge',
      type: 'one-to-many',
      via: 'payment_intent_id',
      description: 'A payment can have multiple charges',
    },
    {
      from: 'charge',
      to: 'refund',
      type: 'one-to-many',
      via: 'charge_id',
      description: 'A charge can have multiple refunds',
    },
    {
      from: 'product',
      to: 'price',
      type: 'one-to-many',
      via: 'product_id',
      description: 'A product can have multiple prices',
    },
    {
      from: 'price',
      to: 'subscription_item',
      type: 'one-to-many',
      via: 'price_id',
      description: 'A price can be used in multiple subscription items',
    },
    {
      from: 'invoice',
      to: 'invoice_item',
      type: 'one-to-many',
      via: 'invoice_id',
      description: 'An invoice can have multiple line items',
    },
    {
      from: 'customer',
      to: 'invoice_item',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple invoice items',
    },
    {
      from: 'coupon',
      to: 'discount',
      type: 'one-to-many',
      via: 'coupon_id',
      description: 'A coupon can be applied as multiple discounts',
    },
    {
      from: 'customer',
      to: 'discount',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple discounts',
    },
    {
      from: 'subscription',
      to: 'discount',
      type: 'one-to-many',
      via: 'subscription_id',
      description: 'A subscription can have discounts',
    },
    {
      from: 'invoice',
      to: 'discount',
      type: 'one-to-many',
      via: 'invoice_id',
      description: 'An invoice can have discounts',
    },
    {
      from: 'customer',
      to: 'quote',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple quotes',
    },
    {
      from: 'customer',
      to: 'credit_note',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple credit notes',
    },
    {
      from: 'invoice',
      to: 'credit_note',
      type: 'one-to-many',
      via: 'invoice_id',
      description: 'An invoice can have credit notes',
    },
    {
      from: 'customer',
      to: 'subscription_schedule',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple subscription schedules',
    },
    {
      from: 'subscription',
      to: 'subscription_schedule',
      type: 'one-to-many',
      via: 'subscription_id',
      description: 'A subscription can have a schedule',
    },
    {
      from: 'product',
      to: 'plan',
      type: 'one-to-many',
      via: 'product_id',
      description: 'A product can have multiple plans',
    },
    {
      from: 'customer',
      to: 'payment_intent',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple payment intents',
    },
    {
      from: 'invoice',
      to: 'payment_intent',
      type: 'one-to-many',
      via: 'invoice_id',
      description: 'An invoice can have payment intents',
    },
    {
      from: 'payment_intent',
      to: 'charge',
      type: 'one-to-many',
      via: 'payment_intent_id',
      description: 'A payment intent can have charges',
    },
    {
      from: 'charge',
      to: 'balance_transaction',
      type: 'one-to-many',
      via: 'source_id',
      description: 'A charge creates balance transactions',
    },
    {
      from: 'refund',
      to: 'balance_transaction',
      type: 'one-to-many',
      via: 'source_id',
      description: 'A refund creates balance transactions',
    },
    {
      from: 'charge',
      to: 'dispute',
      type: 'one-to-many',
      via: 'charge_id',
      description: 'A charge can have disputes',
    },
    {
      from: 'customer',
      to: 'customer_balance_transaction',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have balance transactions',
    },
    {
      from: 'customer',
      to: 'customer_tax_id',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple tax IDs',
    },
    {
      from: 'customer',
      to: 'checkout_session',
      type: 'one-to-many',
      via: 'customer_id',
      description: 'A customer can have multiple checkout sessions',
    },
    {
      from: 'payment_intent',
      to: 'checkout_session',
      type: 'one-to-many',
      via: 'payment_intent_id',
      description: 'A payment intent can be created from a checkout session',
    },
    {
      from: 'subscription',
      to: 'checkout_session',
      type: 'one-to-many',
      via: 'subscription_id',
      description: 'A subscription can be created from a checkout session',
    },
  ],
};

export const getObject = (name: string): SchemaObject | undefined => {
  return schema.objects.find(obj => obj.name === name);
};

export const getRelated = (name: string): Relationship[] => {
  return schema.relationships.filter(
    rel => rel.from === name || rel.to === name
  );
};

export default schema;
